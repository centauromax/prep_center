# Generated by Django 4.2.16 on 2025-06-08 17:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('prep_management', '0013_update_email_field_labels'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_email', models.EmailField(help_text='Email del cliente partecipante alla conversazione', max_length=254, verbose_name='Email Cliente')),
                ('thread_id', models.CharField(help_text='ID univoco per il thread di conversazione', max_length=50, unique=True, verbose_name='ID Thread')),
                ('is_active', models.BooleanField(default=True, help_text='Se False, la conversazione è chiusa', verbose_name='Conversazione Attiva')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data inizio')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Ultimo aggiornamento')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='Ultimo messaggio')),
            ],
            options={
                'verbose_name': 'Conversazione Telegram',
                'verbose_name_plural': 'Conversazioni Telegram',
                'ordering': ['-last_message_at', '-updated_at'],
            },
        ),
        migrations.AlterField(
            model_name='outgoingmessage',
            name='message_id',
            field=models.CharField(choices=[('OUTBOUND_WITHOUT_INBOUND', 'Outbound without inbound'), ('BOX_SERVICES_REQUEST', 'Box Services Request')], max_length=100, verbose_name='Tipo messaggio'),
        ),
        migrations.AlterField(
            model_name='searchresultitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.CreateModel(
            name='TelegramChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_chat_id', models.BigIntegerField(help_text='Chat ID di chi ha inviato il messaggio', verbose_name='Chat ID Mittente')),
                ('sender_email', models.EmailField(help_text='Email di chi ha inviato il messaggio', max_length=254, verbose_name='Email Mittente')),
                ('message_type', models.CharField(choices=[('customer_to_admin', 'Cliente -> Admin'), ('admin_to_customer', 'Admin -> Cliente'), ('admin_broadcast', 'Admin -> Tutti'), ('system', 'Sistema')], default='customer_to_admin', max_length=20, verbose_name='Tipo Messaggio')),
                ('message_text', models.TextField(verbose_name='Testo Messaggio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data invio')),
                ('delivered_to', models.JSONField(blank=True, help_text='Lista di chat_id a cui è stato consegnato il messaggio', null=True, verbose_name='Consegnato a')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='prep_management.telegramconversation', verbose_name='Conversazione')),
            ],
            options={
                'verbose_name': 'Messaggio Chat',
                'verbose_name_plural': 'Messaggi Chat',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminActiveConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_chat_id', models.BigIntegerField(help_text="Chat ID dell'admin", unique=True, verbose_name='Chat ID Admin')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Ultimo aggiornamento')),
                ('active_conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prep_management.telegramconversation', verbose_name='Conversazione Attiva')),
            ],
            options={
                'verbose_name': 'Conversazione Attiva Admin',
                'verbose_name_plural': 'Conversazioni Attive Admin',
            },
        ),
    ]
