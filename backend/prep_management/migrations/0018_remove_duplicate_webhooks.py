# Generated by Django 4.2.13 on 2025-06-13 17:37

from django.db import migrations

def remove_duplicate_webhooks(apps, schema_editor):
    """
    Rimuove i duplicati dalla tabella ShipmentStatusUpdate usando una tabella temporanea.
    Questo approccio è più sicuro perché:
    1. Crea una tabella temporanea con la stessa struttura
    2. Copia solo i record unici (più recenti)
    3. Svuota la tabella originale
    4. Ripristina i record dalla tabella temporanea
    5. Elimina la tabella temporanea
    """
    db_alias = schema_editor.connection.alias
    
    # 1. Crea tabella temporanea con la stessa struttura
    create_temp_table = """
    CREATE TABLE prep_management_shipmentstatusupdate_temp (
        id SERIAL PRIMARY KEY,
        shipment_id VARCHAR(100),
        event_type VARCHAR(50),
        new_status VARCHAR(50),
        merchant_id VARCHAR(100),
        notes TEXT,
        payload JSONB,
        processed BOOLEAN DEFAULT FALSE,
        signature_verified BOOLEAN,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );
    """
    
    # 2. Copia solo i record unici (più recenti) nella tabella temporanea
    copy_unique_records = """
    INSERT INTO prep_management_shipmentstatusupdate_temp (
        shipment_id, event_type, new_status, merchant_id, notes, payload, processed, signature_verified, created_at
    )
    SELECT DISTINCT ON (shipment_id, event_type, new_status, merchant_id)
        shipment_id, event_type, new_status, merchant_id, notes, payload, processed, signature_verified, created_at
    FROM prep_management_shipmentstatusupdate
    ORDER BY shipment_id, event_type, new_status, merchant_id, created_at DESC;
    """
    
    # 3. Svuota la tabella originale
    truncate_original = """
    TRUNCATE TABLE prep_management_shipmentstatusupdate;
    """
    
    # 4. Ripristina i record dalla tabella temporanea
    restore_records = """
    INSERT INTO prep_management_shipmentstatusupdate (
        shipment_id, event_type, new_status, merchant_id, notes, payload, processed, signature_verified, created_at
    )
    SELECT 
        shipment_id, event_type, new_status, merchant_id, notes, payload, processed, signature_verified, created_at
    FROM prep_management_shipmentstatusupdate_temp;
    """
    
    # 5. Elimina la tabella temporanea
    drop_temp_table = """
    DROP TABLE prep_management_shipmentstatusupdate_temp;
    """
    
    # Esegui le query in sequenza
    schema_editor.execute(create_temp_table)
    schema_editor.execute(copy_unique_records)
    schema_editor.execute(truncate_original)
    schema_editor.execute(restore_records)
    schema_editor.execute(drop_temp_table)

class Migration(migrations.Migration):

    dependencies = [
        ('prep_management', '0017_handle_duplicate_webhooks'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_webhooks),
    ]
