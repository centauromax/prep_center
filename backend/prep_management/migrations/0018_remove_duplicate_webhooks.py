# Generated by Django 4.2.13 on 2025-06-13 17:37

from django.db import migrations

def force_remove_duplicates(apps, schema_editor):
    """
    Forza la rimozione dei duplicati usando SQL raw.
    Questo approccio è il più diretto perché:
    1. Usa DELETE con subquery per rimuovere i duplicati
    2. Mantiene solo il record più recente per ogni combinazione
    3. È eseguito direttamente a livello di database
    """
    db_alias = schema_editor.connection.alias
    
    # 1. Rimuovi i duplicati mantenendo solo il record più recente
    remove_duplicates = """
    DELETE FROM prep_management_shipmentstatusupdate a
    USING (
        SELECT shipment_id, event_type, new_status, merchant_id, MAX(created_at) as max_created_at
        FROM prep_management_shipmentstatusupdate
        GROUP BY shipment_id, event_type, new_status, merchant_id
    ) b
    WHERE a.shipment_id = b.shipment_id
    AND a.event_type = b.event_type
    AND a.new_status = b.new_status
    AND a.merchant_id = b.merchant_id
    AND a.created_at < b.max_created_at;
    """
    
    # Esegui la query
    schema_editor.execute(remove_duplicates)

class Migration(migrations.Migration):

    dependencies = [
        ('prep_management', '0017_handle_duplicate_webhooks'),
    ]

    operations = [
        migrations.RunPython(force_remove_duplicates),
    ]
