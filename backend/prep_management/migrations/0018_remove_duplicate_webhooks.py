# Generated by Django 4.2.13 on 2025-06-13 17:37

from django.db import migrations

def truncate_all_tables(apps, schema_editor):
    """
    Svuota completamente tutte le tabelle per ripartire da zero.
    Questo approccio è radicale ma definitivo:
    1. Svuota la tabella ShipmentStatusUpdate
    2. Svuota la tabella TelegramNotification
    3. Rimuove tutti i dati precedenti
    
    Usa DELETE invece di TRUNCATE per compatibilità SQLite/PostgreSQL
    """
    db_alias = schema_editor.connection.alias
    
    # 1. Svuota la tabella ShipmentStatusUpdate (compatibile SQLite + PostgreSQL)
    delete_shipment_updates = """
    DELETE FROM prep_management_shipmentstatusupdate;
    """
    
    # 2. Svuota la tabella TelegramNotification (compatibile SQLite + PostgreSQL)
    delete_telegram_notifications = """
    DELETE FROM prep_management_telegramnotification;
    """
    
    # Esegui le query
    schema_editor.execute(delete_shipment_updates)
    schema_editor.execute(delete_telegram_notifications)
    
    # Reset delle sequenze per PostgreSQL (ignorato da SQLite)
    if schema_editor.connection.vendor == 'postgresql':
        reset_sequences = """
        ALTER SEQUENCE prep_management_shipmentstatusupdate_id_seq RESTART WITH 1;
        ALTER SEQUENCE prep_management_telegramnotification_id_seq RESTART WITH 1;
        """
        schema_editor.execute(reset_sequences)

class Migration(migrations.Migration):

    dependencies = [
        ('prep_management', '0017_handle_duplicate_webhooks'),
    ]

    operations = [
        migrations.RunPython(truncate_all_tables),
    ]
