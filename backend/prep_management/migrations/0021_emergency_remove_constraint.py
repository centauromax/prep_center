# Generated by Django 4.2.13 on 2025-06-13 19:35 - Emergency constraint removal

from django.db import migrations

def remove_constraint_if_exists(apps, schema_editor):
    """
    Rimuove il constraint unique_webhook_per_shipment_event se esiste.
    Questa è una migrazione di emergenza per PostgreSQL.
    """
    db_alias = schema_editor.connection.alias
    
    # Solo per PostgreSQL
    if schema_editor.connection.vendor == 'postgresql':
        try:
            # Prova a rimuovere il constraint se esiste
            drop_constraint_sql = """
            ALTER TABLE prep_management_shipmentstatusupdate 
            DROP CONSTRAINT IF EXISTS unique_webhook_per_shipment_event;
            """
            schema_editor.execute(drop_constraint_sql)
            print("✅ Constraint unique_webhook_per_shipment_event rimosso da PostgreSQL")
        except Exception as e:
            print(f"⚠️ Errore rimozione constraint (probabilmente non esiste): {e}")
    else:
        print("ℹ️ Migrazione saltata: non è PostgreSQL")

def reverse_remove_constraint(apps, schema_editor):
    """
    Reverse operation - non facciamo nulla perché non vogliamo ricreare il constraint
    """
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('prep_management', '0020_remove_shipmentstatusupdate_unique_webhook_per_shipment_event'),
    ]

    operations = [
        migrations.RunPython(remove_constraint_if_exists, reverse_remove_constraint),
    ]
